{"ast":null,"code":"import * as combineitemstotal from \"./combineitemstotal\";\nexport function combineitems(items) {\n  const combineitem = {};\n  console.log(items);\n  for (const item of items) {\n    // items.forEach((item) => {\n    if (combineitem[item.id]) {\n      combineitem[item.id].quantity += 1;\n    } else {\n      combineitem[item.id] = {\n        ...item,\n        quantity: 1\n      };\n    }\n  }\n  const itemstotal = combineitemstotal.combineitemstotal(Object.values(combineitem));\n  return Object.values(itemstotal);\n}","map":{"version":3,"names":["combineitemstotal","combineitems","items","combineitem","console","log","item","id","quantity","itemstotal","Object","values"],"sources":["/Users/sakshi.singh/react-practice/ecommerce/src/Component/combineitems.js"],"sourcesContent":["import * as combineitemstotal from \"./combineitemstotal\";\n\nexport function combineitems(items) {\n  const combineitem = {};\n  console.log(items);\n  for (const item of items) {\n    // items.forEach((item) => {\n    if (combineitem[item.id]) {\n      combineitem[item.id].quantity += 1;\n    } else {\n      combineitem[item.id] = { ...item, quantity: 1 };\n    }\n  }\n  const itemstotal = combineitemstotal.combineitemstotal(\n    Object.values(combineitem)\n  );\n  return Object.values(itemstotal);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,iBAAiB,MAAM,qBAAqB;AAExD,OAAO,SAASC,YAAY,CAACC,KAAK,EAAE;EAClC,MAAMC,WAAW,GAAG,CAAC,CAAC;EACtBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClB,KAAK,MAAMI,IAAI,IAAIJ,KAAK,EAAE;IACxB;IACA,IAAIC,WAAW,CAACG,IAAI,CAACC,EAAE,CAAC,EAAE;MACxBJ,WAAW,CAACG,IAAI,CAACC,EAAE,CAAC,CAACC,QAAQ,IAAI,CAAC;IACpC,CAAC,MAAM;MACLL,WAAW,CAACG,IAAI,CAACC,EAAE,CAAC,GAAG;QAAE,GAAGD,IAAI;QAAEE,QAAQ,EAAE;MAAE,CAAC;IACjD;EACF;EACA,MAAMC,UAAU,GAAGT,iBAAiB,CAACA,iBAAiB,CACpDU,MAAM,CAACC,MAAM,CAACR,WAAW,CAAC,CAC3B;EACD,OAAOO,MAAM,CAACC,MAAM,CAACF,UAAU,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}